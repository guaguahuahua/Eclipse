package com.xjtu.algorithm;

/**
 * 打印从1到最大n位数
 * @author Administrator
 *
 */
public class PrintOneToMaxN {

	/**
	 * n是[1,5]区间内的正整数
	 * 根据给定的n生成最大的n位数，然后通过遍历的方式实现
	 * 如果直接实现，那么最大的数可能就会超出基本类型的范围
	 * @param n
	 */
	public static void printOneToMaxN(int n) {
		
		if(n<1 || n>5) {
			
			System.out.println("参数n越界！");
			return;
		}
		int max=0;
		//生成最大的n位数
		while(n>=1) {
			max=max+9*(int)Math.pow(10,n-1);
			n--;
		}
		
		//输出从1到最大的n位数之间的所有数
		for(int i=1; i<=max; i++) {
//			System.out.println(i);
		}
		System.out.println("end");
	}
	
	/**
	 * 通过使用数组的方式来实现遍历
	 * 申请长度为n+1的整型数组，每次给最低位加1，不断遍历
	 * 终止条件为：数组的第0位为1，也就是发生了溢出
	 * @param n
	 */
	public static void printOneToMaxN_1(int n) {
		
		int[] max=new int[n+1];
		//
		for(int pos=max.length-1; pos>=0; pos) {}
	}
	
	public static void main(String []args) {
		printOneToMaxN(9);
	}
}
