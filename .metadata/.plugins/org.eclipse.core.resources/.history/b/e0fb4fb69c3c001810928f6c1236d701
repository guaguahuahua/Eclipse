package com.xjtu.algorithm;

import java.util.LinkedList;

/**
 * 使用两个栈模拟队列
 * @author Administrator
 *
 */
public class StackSimulateQueue {

	//队列1用来入队，队列2用来出队
	public static LinkedList<Integer> stack1=new LinkedList<Integer>();
	public static LinkedList<Integer> stack2=new LinkedList<Integer>();
	
	/**
	 * 入队
	 * @param data
	 */
	public static void append(int data) {
		stack1.push(data);
	}
	
	/**
	 * 出队
	 * @return
	 */
	public static int poll() {
		if(stack1.isEmpty()) {
			System.out.println("队列已空！");
			return -1;
		}		
		//将栈1的数据放在栈2中，并退栈
		while(!stack1.isEmpty()) {
			int temp=stack1.pop();
			stack2.push(temp);
		}
		//退栈结束后，将栈2的数据回填到栈1中去
		int res=stack2.pop();
		while(!stack2.isEmpty()) {
			int temp=stack2.pop();
			stack1.push(temp);
		}
		//输出出队的元素
		return 0;
	}
	
	/**
	 * 判读队列是否为空
	 * @return
	 */
	public static boolean isEmpty() {
		
		
		return false;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
