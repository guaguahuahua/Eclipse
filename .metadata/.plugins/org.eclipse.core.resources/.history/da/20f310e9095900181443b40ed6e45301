package com.xjtu.interview;

import java.util.ArrayList;
import java.util.List;

public class PrintMatrix {
	
    public ArrayList<Integer> printMatrix_1(int [][] matrix) {
        ArrayList<Integer> res=new ArrayList<Integer>();
        if(matrix.length==1 && matrix[0].length==1) {
        	res.add(matrix[0][0]);
        	return res;
        }
        int left=0, up=0, right=matrix[0].length-1, down=matrix.length-1;
        boolean ltor=true, utod=false, rtol=false, dtou=false, flag=false;
        int row=0, col=0;  
        while(up<down && left<right){
            if(ltor==true){
                while(col<right){
                    res.add(matrix[row][col]);
                    col++;
                }
                ltor=false;
                utod=true;
            }
            if(utod==true){
                while(row<down){
                    res.add(matrix[row][right]);
                    row++;
                }
                utod=false;
                rtol=true;
            }
            if(rtol==true){
                while(col>left){
                    res.add(matrix[down][col]);
                    col--;
                }
                rtol=false;
                dtou=true;
            }
            if(dtou==true){
                while(row>up){
                    res.add(matrix[row][col]);
                    row--;
                }
                dtou=false;
                ltor=true;
            }        
            left++;
            up++;
            right--;
            down--;
            col=left;
            row=up;
            flag=true;
        }
        //解决奇数行列的矩阵的问题
        if(flag==true && matrix.length>>1<<1!=matrix.length && matrix[0].length>>1<<1!=matrix[0].length) {
        	res.add(matrix[row][col]);
        }        
        if((matrix.length==1 && matrix[0].length!=1) || (matrix.length!=1 && matrix[0].length==1)) {
        	if(matrix.length==1) {
        		while(col<matrix[0].length) {
        			res.add(matrix[0][col++]);
        		}
        	}else {
        		while(row<matrix.length) {
        			res.add(matrix[row++][0]);
        		}
        	}
        }
        return res;
    }
    
    
    /**
     * 螺旋形打印数组，使用一个相同大小的数组进行标记
     * @param matrix
     * @return
     */
    public ArrayList<Integer> printMatrix(int [][] matrix) {
    	
    	boolean
    	ArrayList<Integer>res=new ArrayList<Integer>();
    	if(matrix.length==1 && matrix[0].length==1) {
    		res.add(matrix[0][0]);
    		return res;
    	}
    	int left=0;
    	int right=matrix[0].length;
    	int up=0;
    	int down=matrix.length;
    	int row=0, col=0;
    	
    	while(left<right && up<down) {
        	while(col<right-1) {
        		res.add(matrix[row][col++]);
        	}
        	while(row<down-1) {
        		res.add(matrix[row++][col]);
        	}
        	while(col>left) {
        		res.add(matrix[row][col--]);
        	}
        	while(row>up) {
        		res.add(matrix[row--][col]);
        	}
        	left++;
        	right--;
        	down--;
        	up++;
        	col=left;
        	row=up;
    	}
    	return res;
    }
    
    public static void main(String []args) {
//		int [][]a= {
//				{ 1,  2,  3,  4,  5 }, 
//				{ 6,  7,  8,  9,  10 }, 
//				{ 11, 12, 13, 14, 15 },
//				{ 16, 17, 18, 19, 20 },
//				{ 21, 22, 23, 24, 25 }
//		};
//    	int [][]a= 
//    		{
//    				{1,2,3},
//    				{4,5,6},
//    				{7,8,9}
//    		};
//		int  [][]a=
//			{
//					{1,2},
//					{3,4}
//			};
    	
//		int [][]a=
//			{
//					{1},
//					{2},
//					{3},
//					{4},
//					{5}
//			};

//		int  [][]a=
//		{
//				{1,2},
//				{3,4},
//				{5,6},
//				{7,8}
//		};
		int [][]a= 
			{
						{ 1,  2,  3,  4,  5 },
						{ 6,  7,  8,  9,  10 },
						{ 11, 12, 13, 14, 15 }
			};
    	PrintMatrix print=new PrintMatrix();
    	ArrayList<Integer>res=print.printMatrix(a);
    	System.out.println(res);
    }
}
